<div class="page-header">
  <h1>All Oysters</h1>
  <h3>
    Add A New Oyster
    <a href="/oysters/new" class="btn btn-success"><i class="fa fa-plus"></i></a>
  </h3>
</div>

<!-- Responsive, Isotope-based layout example -->

<table class="table table-striped table-hover ">
  <thead>
    <tr>
      <th>Oyster Type</th>
      <th>Average Rating</th>
      <th>My Rating</th>
    </tr>
  </thead>
  <tbody>
  <% @oysters.each do |oyster| %>
    <tr class="success">
      <td><%= oyster.name %></td>
      <td><%= oyster.average_rating %></td>
      <td><%= current_user.email %></td>
    </tr>
    <tr>
      <td><%= oyster.description %></td>
      <td> </td>
      <td>
        <div class="btn-group btn-group-right">
          <a href="/favorites/create?oyster_id=<%= oyster.id %>" class="btn btn-info">
            <i class="fa fa-star-o"></i>
          </a>

          <a href="/oysters/<%= oyster.id %>/edit" class="btn btn-warning">
            <i class="fa fa-edit"></i>
          </a>

          <a href="/delete_oyster/<%= oyster.id %>" class="btn btn-danger" rel="nofollow">
            <i class="fa fa-trash-o"></i>
          </a>
        </div>
        </td>
    </tr>

    </tr>
  </tbody>
<% end %>
</table>



<!-- You can ignore the following. It's a quick and dirty example of how to get a Pinterest-style layout with quick search. -->
<!-- JavaScript for Isotope layout and quicksearch -->
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/3.1.8/imagesloaded.pkgd.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/jquery.isotope/2.0.0/isotope.pkgd.min.js"></script>
<script>
  $(function() {
    // quick search regex
    var qsRegex;

    // init Isotope
    var $container = $('.isotope-container');

    $container.imagesLoaded(function() {
      $container.isotope({
        itemSelector: '.isotope-item',
        layoutMode: 'masonry',
        filter: function() {
          return qsRegex ? $(this).text().match( qsRegex ) : true;
        }
      })
    });

    // use value of search field to filter
    var $quicksearch = $('#quicksearch').keyup( debounce( function() {
      qsRegex = new RegExp( $quicksearch.val(), 'gi' );
      $container.isotope();
    }, 200 ) );

  });

  // debounce so filtering doesn't happen every millisecond
  function debounce( fn, threshold ) {
    var timeout;
    return function debounced() {
      if ( timeout ) {
        clearTimeout( timeout );
      }
      function delayed() {
        fn();
        timeout = null;
      }
      timeout = setTimeout( delayed, threshold || 100 );
    }
  }
</script>

<!-- End responsive, Isotope-based layout example -->
